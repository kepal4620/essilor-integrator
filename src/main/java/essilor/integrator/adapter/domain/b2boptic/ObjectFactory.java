//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.10.19 at 07:48:00 PM CEST 
//


package essilor.integrator.adapter.domain.b2boptic;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the essilor.integrator.adapter.domain.b2boptic package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: essilor.integrator.adapter.domain.b2boptic
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link B2BOptic }
     * 
     */
    public B2BOptic createB2BOptic() {
        return new B2BOptic();
    }

    /**
     * Create an instance of {@link PPoint }
     * 
     */
    public PPoint createPPoint() {
        return new PPoint();
    }

    /**
     * Create an instance of {@link Account }
     * 
     */
    public Account createAccount() {
        return new Account();
    }

    /**
     * Create an instance of {@link Patient }
     * 
     */
    public Patient createPatient() {
        return new Patient();
    }

    /**
     * Create an instance of {@link IProfilerResult }
     * 
     */
    public IProfilerResult createIProfilerResult() {
        return new IProfilerResult();
    }

    /**
     * Create an instance of {@link IProfilerResult.WavefrontCornea }
     * 
     */
    public IProfilerResult.WavefrontCornea createIProfilerResultWavefrontCornea() {
        return new IProfilerResult.WavefrontCornea();
    }

    /**
     * Create an instance of {@link IProfilerResult.WavefrontEye }
     * 
     */
    public IProfilerResult.WavefrontEye createIProfilerResultWavefrontEye() {
        return new IProfilerResult.WavefrontEye();
    }

    /**
     * Create an instance of {@link essilor.integrator.adapter.domain.b2boptic.Shape }
     * 
     */
    public essilor.integrator.adapter.domain.b2boptic.Shape createShape() {
        return new essilor.integrator.adapter.domain.b2boptic.Shape();
    }

    /**
     * Create an instance of {@link Bevel }
     * 
     */
    public Bevel createBevel() {
        return new Bevel();
    }

    /**
     * Create an instance of {@link TimeStamps }
     * 
     */
    public TimeStamps createTimeStamps() {
        return new TimeStamps();
    }

    /**
     * Create an instance of {@link Centration }
     * 
     */
    public Centration createCentration() {
        return new Centration();
    }

    /**
     * Create an instance of {@link Pair }
     * 
     */
    public Pair createPair() {
        return new Pair();
    }

    /**
     * Create an instance of {@link essilor.integrator.adapter.domain.b2boptic.Lens }
     * 
     */
    public essilor.integrator.adapter.domain.b2boptic.Lens createLens() {
        return new essilor.integrator.adapter.domain.b2boptic.Lens();
    }

    /**
     * Create an instance of {@link GeometryType }
     * 
     */
    public GeometryType createGeometryType() {
        return new GeometryType();
    }

    /**
     * Create an instance of {@link IProfilerData }
     * 
     */
    public IProfilerData createIProfilerData() {
        return new IProfilerData();
    }

    /**
     * Create an instance of {@link IProfilerData.Identification }
     * 
     */
    public IProfilerData.Identification createIProfilerDataIdentification() {
        return new IProfilerData.Identification();
    }

    /**
     * Create an instance of {@link Edging }
     * 
     */
    public Edging createEdging() {
        return new Edging();
    }

    /**
     * Create an instance of {@link TracerData }
     * 
     */
    public TracerData createTracerData() {
        return new TracerData();
    }

    /**
     * Create an instance of {@link Frame }
     * 
     */
    public Frame createFrame() {
        return new Frame();
    }

    /**
     * Create an instance of {@link essilor.integrator.adapter.domain.b2boptic.DrillHoles }
     * 
     */
    public essilor.integrator.adapter.domain.b2boptic.DrillHoles createDrillHoles() {
        return new essilor.integrator.adapter.domain.b2boptic.DrillHoles();
    }

    /**
     * Create an instance of {@link Frame.Shape }
     * 
     */
    public Frame.Shape createFrameShape() {
        return new Frame.Shape();
    }

    /**
     * Create an instance of {@link Item }
     * 
     */
    public Item createItem() {
        return new Item();
    }

    /**
     * Create an instance of {@link IProfilerMap }
     * 
     */
    public IProfilerMap createIProfilerMap() {
        return new IProfilerMap();
    }

    /**
     * Create an instance of {@link Header }
     * 
     */
    public Header createHeader() {
        return new Header();
    }

    /**
     * Create an instance of {@link B2BOptic.Items }
     * 
     */
    public B2BOptic.Items createB2BOpticItems() {
        return new B2BOptic.Items();
    }

    /**
     * Create an instance of {@link Software }
     * 
     */
    public Software createSoftware() {
        return new Software();
    }

    /**
     * Create an instance of {@link Fitting }
     * 
     */
    public Fitting createFitting() {
        return new Fitting();
    }

    /**
     * Create an instance of {@link Diameter }
     * 
     */
    public Diameter createDiameter() {
        return new Diameter();
    }

    /**
     * Create an instance of {@link Prism }
     * 
     */
    public Prism createPrism() {
        return new Prism();
    }

    /**
     * Create an instance of {@link RXDataTypeFarNear }
     * 
     */
    public RXDataTypeFarNear createRXDataTypeFarNear() {
        return new RXDataTypeFarNear();
    }

    /**
     * Create an instance of {@link ProductCatalog }
     * 
     */
    public ProductCatalog createProductCatalog() {
        return new ProductCatalog();
    }

    /**
     * Create an instance of {@link Zernikes8 }
     * 
     */
    public Zernikes8 createZernikes8() {
        return new Zernikes8();
    }

    /**
     * Create an instance of {@link Zernikes7 }
     * 
     */
    public Zernikes7 createZernikes7() {
        return new Zernikes7();
    }

    /**
     * Create an instance of {@link RXDataTypeSimple }
     * 
     */
    public RXDataTypeSimple createRXDataTypeSimple() {
        return new RXDataTypeSimple();
    }

    /**
     * Create an instance of {@link Zernikes9 }
     * 
     */
    public Zernikes9 createZernikes9() {
        return new Zernikes9();
    }

    /**
     * Create an instance of {@link ApplianceWeight }
     * 
     */
    public ApplianceWeight createApplianceWeight() {
        return new ApplianceWeight();
    }

    /**
     * Create an instance of {@link FrameSize }
     * 
     */
    public FrameSize createFrameSize() {
        return new FrameSize();
    }

    /**
     * Create an instance of {@link Curve }
     * 
     */
    public Curve createCurve() {
        return new Curve();
    }

    /**
     * Create an instance of {@link Zernikes12 }
     * 
     */
    public Zernikes12 createZernikes12() {
        return new Zernikes12();
    }

    /**
     * Create an instance of {@link Zernikes10 }
     * 
     */
    public Zernikes10 createZernikes10() {
        return new Zernikes10();
    }

    /**
     * Create an instance of {@link ContactInfo }
     * 
     */
    public ContactInfo createContactInfo() {
        return new ContactInfo();
    }

    /**
     * Create an instance of {@link Zernikes11 }
     * 
     */
    public Zernikes11 createZernikes11() {
        return new Zernikes11();
    }

    /**
     * Create an instance of {@link Cylinder }
     * 
     */
    public Cylinder createCylinder() {
        return new Cylinder();
    }

    /**
     * Create an instance of {@link Decentration }
     * 
     */
    public Decentration createDecentration() {
        return new Decentration();
    }

    /**
     * Create an instance of {@link StockLens }
     * 
     */
    public StockLens createStockLens() {
        return new StockLens();
    }

    /**
     * Create an instance of {@link RXDataType4SL }
     * 
     */
    public RXDataType4SL createRXDataType4SL() {
        return new RXDataType4SL();
    }

    /**
     * Create an instance of {@link Coating }
     * 
     */
    public Coating createCoating() {
        return new Coating();
    }

    /**
     * Create an instance of {@link CPoint }
     * 
     */
    public CPoint createCPoint() {
        return new CPoint();
    }

    /**
     * Create an instance of {@link RXDataType }
     * 
     */
    public RXDataType createRXDataType() {
        return new RXDataType();
    }

    /**
     * Create an instance of {@link Zernikes }
     * 
     */
    public Zernikes createZernikes() {
        return new Zernikes();
    }

    /**
     * Create an instance of {@link Address }
     * 
     */
    public Address createAddress() {
        return new Address();
    }

    /**
     * Create an instance of {@link RXDataTypeFn }
     * 
     */
    public RXDataTypeFn createRXDataTypeFn() {
        return new RXDataTypeFn();
    }

    /**
     * Create an instance of {@link PPoint.Angle }
     * 
     */
    public PPoint.Angle createPPointAngle() {
        return new PPoint.Angle();
    }

    /**
     * Create an instance of {@link Account.Id }
     * 
     */
    public Account.Id createAccountId() {
        return new Account.Id();
    }

    /**
     * Create an instance of {@link Patient.Ipseo }
     * 
     */
    public Patient.Ipseo createPatientIpseo() {
        return new Patient.Ipseo();
    }

    /**
     * Create an instance of {@link IProfilerResult.WavefrontCornea.VertexPosition }
     * 
     */
    public IProfilerResult.WavefrontCornea.VertexPosition createIProfilerResultWavefrontCorneaVertexPosition() {
        return new IProfilerResult.WavefrontCornea.VertexPosition();
    }

    /**
     * Create an instance of {@link IProfilerResult.WavefrontEye.PupilCenter }
     * 
     */
    public IProfilerResult.WavefrontEye.PupilCenter createIProfilerResultWavefrontEyePupilCenter() {
        return new IProfilerResult.WavefrontEye.PupilCenter();
    }

    /**
     * Create an instance of {@link essilor.integrator.adapter.domain.b2boptic.Shape.Points }
     * 
     */
    public essilor.integrator.adapter.domain.b2boptic.Shape.Points createShapePoints() {
        return new essilor.integrator.adapter.domain.b2boptic.Shape.Points();
    }

    /**
     * Create an instance of {@link Bevel.Position }
     * 
     */
    public Bevel.Position createBevelPosition() {
        return new Bevel.Position();
    }

    /**
     * Create an instance of {@link TimeStamps.DateTime }
     * 
     */
    public TimeStamps.DateTime createTimeStampsDateTime() {
        return new TimeStamps.DateTime();
    }

    /**
     * Create an instance of {@link Centration.MonocularCentrationDistance }
     * 
     */
    public Centration.MonocularCentrationDistance createCentrationMonocularCentrationDistance() {
        return new Centration.MonocularCentrationDistance();
    }

    /**
     * Create an instance of {@link Centration.Height }
     * 
     */
    public Centration.Height createCentrationHeight() {
        return new Centration.Height();
    }

    /**
     * Create an instance of {@link Centration.EyeRotationCenterDistance }
     * 
     */
    public Centration.EyeRotationCenterDistance createCentrationEyeRotationCenterDistance() {
        return new Centration.EyeRotationCenterDistance();
    }

    /**
     * Create an instance of {@link Pair.Lens }
     * 
     */
    public Pair.Lens createPairLens() {
        return new Pair.Lens();
    }

    /**
     * Create an instance of {@link essilor.integrator.adapter.domain.b2boptic.Lens.Options }
     * 
     */
    public essilor.integrator.adapter.domain.b2boptic.Lens.Options createLensOptions() {
        return new essilor.integrator.adapter.domain.b2boptic.Lens.Options();
    }

    /**
     * Create an instance of {@link GeometryType.Thickness }
     * 
     */
    public GeometryType.Thickness createGeometryTypeThickness() {
        return new GeometryType.Thickness();
    }

    /**
     * Create an instance of {@link IProfilerData.Identification.Device }
     * 
     */
    public IProfilerData.Identification.Device createIProfilerDataIdentificationDevice() {
        return new IProfilerData.Identification.Device();
    }

    /**
     * Create an instance of {@link Edging.Chamfer }
     * 
     */
    public Edging.Chamfer createEdgingChamfer() {
        return new Edging.Chamfer();
    }

    /**
     * Create an instance of {@link TracerData.Binaries }
     * 
     */
    public TracerData.Binaries createTracerDataBinaries() {
        return new TracerData.Binaries();
    }

    /**
     * Create an instance of {@link Frame.DrillHoles }
     * 
     */
    public Frame.DrillHoles createFrameDrillHoles() {
        return new Frame.DrillHoles();
    }

    /**
     * Create an instance of {@link Frame.PantoscopicAngle }
     * 
     */
    public Frame.PantoscopicAngle createFramePantoscopicAngle() {
        return new Frame.PantoscopicAngle();
    }

    /**
     * Create an instance of {@link Frame.FrameBowAngle }
     * 
     */
    public Frame.FrameBowAngle createFrameFrameBowAngle() {
        return new Frame.FrameBowAngle();
    }

    /**
     * Create an instance of {@link essilor.integrator.adapter.domain.b2boptic.DrillHoles.PDrillHole }
     * 
     */
    public essilor.integrator.adapter.domain.b2boptic.DrillHoles.PDrillHole createDrillHolesPDrillHole() {
        return new essilor.integrator.adapter.domain.b2boptic.DrillHoles.PDrillHole();
    }

    /**
     * Create an instance of {@link essilor.integrator.adapter.domain.b2boptic.DrillHoles.CDrillHole }
     * 
     */
    public essilor.integrator.adapter.domain.b2boptic.DrillHoles.CDrillHole createDrillHolesCDrillHole() {
        return new essilor.integrator.adapter.domain.b2boptic.DrillHoles.CDrillHole();
    }

    /**
     * Create an instance of {@link Frame.Shape.Catalog }
     * 
     */
    public Frame.Shape.Catalog createFrameShapeCatalog() {
        return new Frame.Shape.Catalog();
    }

    /**
     * Create an instance of {@link Frame.Shape.Explicit }
     * 
     */
    public Frame.Shape.Explicit createFrameShapeExplicit() {
        return new Frame.Shape.Explicit();
    }

    /**
     * Create an instance of {@link Item.Parties }
     * 
     */
    public Item.Parties createItemParties() {
        return new Item.Parties();
    }

    /**
     * Create an instance of {@link Item.Options }
     * 
     */
    public Item.Options createItemOptions() {
        return new Item.Options();
    }

    /**
     * Create an instance of {@link Item.MultiplePair }
     * 
     */
    public Item.MultiplePair createItemMultiplePair() {
        return new Item.MultiplePair();
    }

    /**
     * Create an instance of {@link IProfilerMap.Point }
     * 
     */
    public IProfilerMap.Point createIProfilerMapPoint() {
        return new IProfilerMap.Point();
    }

    /**
     * Create an instance of {@link Header.OrderParties }
     * 
     */
    public Header.OrderParties createHeaderOrderParties() {
        return new Header.OrderParties();
    }

}
